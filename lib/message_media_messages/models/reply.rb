# message_media_messages
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module MessageMediaMessages
  # Reply Model.
  class Reply < BaseModel
    # The URL specified as the callback URL in the original submit message
    # request
    # @return [String]
    attr_accessor :callback_url

    # Content of the reply
    # @return [String]
    attr_accessor :content

    # Date time when the reply was received
    # @return [DateTime]
    attr_accessor :date_received

    # Address from which this reply was sent to
    # @return [String]
    attr_accessor :destination_number

    # Unique ID of the original message
    # @return [UUID | String]
    attr_accessor :message_id

    # Any metadata that was included in the original submit message request
    # @return [Object]
    attr_accessor :metadata

    # Unique ID of this reply
    # @return [UUID | String]
    attr_accessor :reply_id

    # Address from which this reply was received from
    # @return [String]
    attr_accessor :source_number

    # Address from which this reply was received from
    # @return [VendorAccountId]
    attr_accessor :vendor_account_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['callback_url'] = 'callback_url'
      @_hash['content'] = 'content'
      @_hash['date_received'] = 'date_received'
      @_hash['destination_number'] = 'destination_number'
      @_hash['message_id'] = 'message_id'
      @_hash['metadata'] = 'metadata'
      @_hash['reply_id'] = 'reply_id'
      @_hash['source_number'] = 'source_number'
      @_hash['vendor_account_id'] = 'vendor_account_id'
      @_hash
    end

    def initialize(callback_url = nil,
                   content = nil,
                   date_received = nil,
                   destination_number = nil,
                   message_id = nil,
                   metadata = nil,
                   reply_id = nil,
                   source_number = nil,
                   vendor_account_id = nil)
      @callback_url = callback_url
      @content = content
      @date_received = date_received
      @destination_number = destination_number
      @message_id = message_id
      @metadata = metadata
      @reply_id = reply_id
      @source_number = source_number
      @vendor_account_id = vendor_account_id
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      callback_url = hash['callback_url']
      content = hash['content']
      date_received = APIHelper.rfc3339(hash['date_received']) if
        hash['date_received']
      destination_number = hash['destination_number']
      message_id = hash['message_id']
      metadata = hash['metadata']
      reply_id = hash['reply_id']
      source_number = hash['source_number']
      if hash['vendor_account_id']
        vendor_account_id = VendorAccountId.from_hash(hash['vendor_account_id'])
      end

      # Create object from extracted values.
      Reply.new(callback_url,
                content,
                date_received,
                destination_number,
                message_id,
                metadata,
                reply_id,
                source_number,
                vendor_account_id)
    end
  end
end
